<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.13">
  <POU Name="_Array0to1_0to10OfBool" Id="{5d4a5c6c-235b-0fc8-3170-fb9e79155b24}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK _Array0to1_0to10OfBool EXTENDS ArrayDatatypeBase
VAR CONSTANT
	lBound : DINT := 0;
	uBound : DINT := 10;
END_VAR
VAR
	localData : ARRAY [0..1, 0..10] OF BOOL;
	activeData : REFERENCE TO ARRAY [0..1, 0..10] OF BOOL REF= localData;
	elements : ARRAY [0..1, 0..10] OF _BOOL(FALSE);
	elementLookup : Dictionary;
	baseType : _BOOL(FALSE);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Core" Id="{a4c83d3b-0793-0d31-3ab4-43ec0eee571b}">
      <Folder Name="Constructor" Id="{f73b3dbe-bd97-0334-2b49-33e3b02f1105}" />
      <Folder Name="Protected" Id="{f684be48-05fe-0c71-3bdd-c0a07b4c348d}" />
    </Folder>
    <Folder Name="Customize" Id="{51246736-122c-08bb-0d53-c36e681d4276}" />
    <Property Name="Address" Id="{937712cb-3222-0bbc-236e-1e91efb87d64}" FolderPath="Core\">
      <Declaration><![CDATA[PROPERTY PUBLIC Address : PVOID]]></Declaration>
      <Get Name="Get" Id="{7f9e12e9-d1d3-0276-13fa-4be8ae16e0f3}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Address := ADR(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="BaseDatatype" Id="{3fe17596-775e-0ed6-18bd-5db5acebf1e5}" FolderPath="Core\">
      <Declaration><![CDATA[PROPERTY PUBLIC BaseDatatype : I_Datatype]]></Declaration>
      <Get Name="Get" Id="{5031f141-5009-0717-294e-22d89e729e2a}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[BaseDatatype := baseType;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="ClearReference" Id="{a4fd45ab-9649-0f5b-046f-1eaed9fa03f4}" FolderPath="Core\">
      <Declaration><![CDATA[METHOD PUBLIC ClearReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= localData;
SetElementReference();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Clone" Id="{9f25814a-3a0b-04d5-3871-2c39cbe0ff34}" FolderPath="Customize\">
      <Declaration><![CDATA[METHOD PUBLIC Clone : I_Datatype
VAR
    pClone : POINTER TO _Array0to10OfBool;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[pClone := __NEW(_Array0to10OfBool());
pClone^.Value := Value;
Clone := pClone^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{e7c81eb0-4ae5-0991-3cb5-1f4d3b1f0247}" FolderPath="Core\Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[StoreElementsInLookup();
SetElementReference();]]></ST>
      </Implementation>
    </Method>
    <Method Name="GetElementAsDatatypeByIndex" Id="{3f988d55-44c3-0ab8-22bc-a63be86b07ea}" FolderPath="Core\">
      <Declaration><![CDATA[METHOD PUBLIC GetElementAsDatatypeByIndex : I_Datatype
VAR_INPUT
	Index : DINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[GetElementAsDatatypeByIndex := elements[Index];]]></ST>
      </Implementation>
    </Method>
    <Method Name="GetElementByIndex" Id="{bf39b153-6231-010d-38a9-4df671a21e14}" FolderPath="Customize\">
      <Declaration><![CDATA[METHOD PUBLIC GetElementByIndex : REFERENCE TO _BOOL;
VAR_INPUT
	Index : DINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[GetElementByIndex REF= elements[Index];]]></ST>
      </Implementation>
    </Method>
    <Property Name="LowerBound" Id="{2ae66629-81a6-0d42-0317-752dd81eb2c5}" FolderPath="Core\">
      <Declaration><![CDATA[PROPERTY PUBLIC LowerBound : DINT]]></Declaration>
      <Get Name="Get" Id="{53ca9a66-56b4-04c9-0258-e0999a5e5328}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[LowerBound := lBound;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="MakeReferenceTo" Id="{2fb4dcb2-2d88-0c15-3814-4a5d08cbb870}" FolderPath="Customize\">
      <Declaration><![CDATA[METHOD PUBLIC MakeReferenceTo
VAR_INPUT
	ReferenceTarget : REFERENCE TO ARRAY [lBound..uBound] OF BOOL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= ReferenceTarget;
SetElementReference();]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnSerializeArrayValues" Id="{4a770347-562e-0d1d-08ab-45bc07b42812}" FolderPath="Core\Protected\">
      <Declaration><![CDATA[METHOD PROTECTED OnSerializeArrayValues
VAR_INPUT
	Serializer : I_Serializer;
END_VAR
VAR
	i : DINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FOR i := lBound TO uBound DO
	elements[i].SerializeWith(Serializer);
END_FOR]]></ST>
      </Implementation>
    </Method>
    <Method Name="SetElementReference" Id="{59c290b2-f6bb-0e03-1c68-a60a793469d4}" FolderPath="Core\Protected\">
      <Declaration><![CDATA[METHOD PROTECTED SetElementReference
VAR_INPUT
END_VAR
VAR
	i : DINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FOR i := lBound TO uBound DO
	elements[i].MakeReferenceTo(activeData[i]);
END_FOR]]></ST>
      </Implementation>
    </Method>
    <Property Name="Size" Id="{b1e6b758-c1c6-0d45-1bf5-31b8e7eb4107}" FolderPath="Core\">
      <Declaration><![CDATA[PROPERTY PUBLIC Size : UDINT]]></Declaration>
      <Get Name="Get" Id="{a80dcb90-cf75-06cf-04f3-df54e8e67ed9}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Size := SIZEOF(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="StoreElementsInLookup" Id="{bb16b1d6-082c-0f17-0145-589be290532f}" FolderPath="Core\Protected\">
      <Declaration><![CDATA[METHOD PROTECTED StoreElementsInLookup
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[FOR i := lBound TO uBound DO
	elements[i].MakeReferenceTo(activeData[i]);
END_FOR

AddElement(lookup, element[]);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryDeserializeArrayValues" Id="{3bab3720-f9eb-008c-2c4d-b192c3a7e23f}" FolderPath="Core\Protected\">
      <Declaration><![CDATA[METHOD PROTECTED TryDeserializeArrayValues : BOOL
VAR_INPUT
	Deserializer : I_Deserializer;
	Feedback : I_DeserializerFeedback;
END_VAR
VAR
	enumerator : I_DeserializerArrayForwardEnumerator;
	i : DINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[enumerator := Deserializer.GetArrayEnumerator();
i := lBound;

WHILE enumerator.MoveNext() AND i <= uBound DO
	
	IF NOT elements[i].TryDeserializeFrom(enumerator.Current, Feedback) THEN
		EXIT;
	END_IF
	i := i + 1;

END_WHILE
enumerator.Dispose();]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryMakeReferenceTo" Id="{ba5d49d6-2307-0f43-0db4-c34f092e36eb}" FolderPath="Customize\">
      <Declaration><![CDATA[METHOD TryMakeReferenceTo : BOOL
VAR_INPUT
	Target : I_Datatype;
END_VAR
VAR
	targetAsArray : I_ArrayDatatype;
	pTargetData : POINTER TO ARRAY [lBound..uBound] OF BOOL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT Target.TryResolveAsArrayDatatype(targetAsArray) THEN
	RETURN;
END_IF

IF NOT (targetAsArray.Identifier = Identifier) THEN
	RETURN;
END_IF

pTargetData := Target.Address;
activeData REF= pTargetData^;
SetElementReference();
TryMakeReferenceTo := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Property Name="UpperBound" Id="{801cb29f-1364-0768-06ea-189205aadc23}" FolderPath="Core\">
      <Declaration><![CDATA[PROPERTY PUBLIC UpperBound : DINT]]></Declaration>
      <Get Name="Get" Id="{d3e59866-b0c4-0b9c-361a-4e30ab220e06}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[UpperBound := ubound;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="Value" Id="{579974b3-f878-0c7d-2b89-7c2e6e13bdd6}" FolderPath="Customize\">
      <Declaration><![CDATA[PROPERTY PUBLIC Value : REFERENCE TO ARRAY [lBound..uBound] OF BOOL;]]></Declaration>
      <Get Name="Get" Id="{a0cabc49-0a70-0dce-0849-f57b718d5694}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Value ref= activeData;]]></ST>
        </Implementation>
      </Get>
    </Property>
  </POU>
</TcPlcObject>