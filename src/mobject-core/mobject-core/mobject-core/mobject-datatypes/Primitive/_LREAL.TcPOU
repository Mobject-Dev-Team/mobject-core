<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.13">
  <POU Name="_LREAL" Id="{cc05ec20-dde3-4620-8951-148abfb0053c}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK _LREAL EXTENDS NumericDatatypeBase
VAR
	localData : LREAL;
	activeData : REFERENCE TO LREAL REF= localData;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{a934c424-137d-42f8-af4c-56343d1f2818}" />
    <Folder Name="Protected" Id="{7e4d9fa1-9695-0f1c-1c1e-6915e9123158}" />
    <Property Name="Address" Id="{cc0072cc-c616-423d-842c-0b4a616cde59}">
      <Declaration><![CDATA[PROPERTY PUBLIC Address : PVOID]]></Declaration>
      <Get Name="Get" Id="{f49a81b8-f747-47ee-b8dd-73af7e334361}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Address := ADR(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="ClearReference" Id="{843a3718-36d8-45a2-b963-ae06c440e19b}">
      <Declaration><![CDATA[METHOD PUBLIC ClearReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= localData;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Clone" Id="{f58a1f4f-5066-4158-9eca-2c67cf283a3a}">
      <Declaration><![CDATA[METHOD PUBLIC Clone : I_Datatype
VAR
    pClone : POINTER TO _LREAL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[pClone := __NEW(_LREAL(InitialValue := Value));
Clone := pClone^;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{f1ccfb84-1244-45ac-8c76-9fcb512a9f94}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	InitialValue : LREAL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[localData := InitialValue;]]></ST>
      </Implementation>
    </Method>
    <Property Name="IsEven" Id="{9ca8a8b5-e595-0166-3b4a-304f312d30c8}">
      <Declaration><![CDATA[PROPERTY PUBLIC IsEven : BOOL]]></Declaration>
      <Get Name="Get" Id="{dd68925e-b4d4-0338-060e-c21a78069c45}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[IsEven := FALSE;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="IsFloat" Id="{ced1409c-3953-48b6-ab91-a12814ed569b}">
      <Declaration><![CDATA[PROPERTY PUBLIC IsFloat : BOOL]]></Declaration>
      <Get Name="Get" Id="{f608de6f-3bad-49d8-b002-970549314be5}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[IsFloat := TRUE;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="IsOdd" Id="{a5ba06c7-2f92-0f30-376f-f8bd0fa8f924}">
      <Declaration><![CDATA[PROPERTY PUBLIC IsOdd : BOOL]]></Declaration>
      <Get Name="Get" Id="{1c846fab-5b28-0fda-26f7-e8077478bef6}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[IsOdd := FALSE;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="IsSigned" Id="{ecee7cea-9782-4cd9-bf0d-b432c5958e0b}">
      <Declaration><![CDATA[PROPERTY PUBLIC IsSigned : BOOL]]></Declaration>
      <Get Name="Get" Id="{8c971876-b10e-488c-9e2a-56c35c9b1a1b}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[IsSigned := TRUE;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="MakeReferenceTo" Id="{cdd8d06f-e9fd-4897-b1a5-1b9b17752db1}">
      <Declaration><![CDATA[METHOD PUBLIC MakeReferenceTo
VAR_INPUT
	ReferenceTarget : REFERENCE TO LREAL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= ReferenceTarget;]]></ST>
      </Implementation>
    </Method>
    <Property Name="MaxValue" Id="{8cbb32e8-4299-07d9-0fed-f377845df685}">
      <Declaration><![CDATA[PROPERTY PUBLIC MaxValue : LREAL]]></Declaration>
      <Get Name="Get" Id="{8bfd8fc2-64b9-0b1f-39a5-a998a0ac598a}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[MaxValue :=  DatatypeLimits.LREAL_MAX_VALUE;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="MinValue" Id="{74151111-62ab-09d5-27cd-23a52b8a6797}">
      <Declaration><![CDATA[PROPERTY PUBLIC MinValue : LREAL]]></Declaration>
      <Get Name="Get" Id="{d7968ca9-5a4d-0ba5-02bd-083a644a05d6}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[MinValue := DatatypeLimits.LREAL_MIN_VALUE;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="SerializeMaxValue" Id="{45955609-ed01-05c3-2d38-ae2d5ec2865d}" FolderPath="Protected\">
      <Declaration><![CDATA[METHOD PROTECTED SerializeMaxValue
VAR_INPUT
	Serializer : I_Serializer;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Serializer.AddLreal(MaxValue);]]></ST>
      </Implementation>
    </Method>
    <Method Name="SerializeMinValue" Id="{650de54f-321c-0504-3ebc-55346f957ca0}" FolderPath="Protected\">
      <Declaration><![CDATA[METHOD PROTECTED SerializeMinValue
VAR_INPUT
	Serializer : I_Serializer;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Serializer.AddLreal(MinValue);]]></ST>
      </Implementation>
    </Method>
    <Method Name="SerializeWith" Id="{02aabc19-6942-48ee-8f2d-313a86b52ff9}">
      <Declaration><![CDATA[METHOD PUBLIC SerializeWith
VAR_INPUT
	Serializer : I_Serializer;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Serializer.AddLreal(activeData);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Size" Id="{89c261d1-bac6-4392-bda7-50836f50db6e}">
      <Declaration><![CDATA[PROPERTY PUBLIC Size : UDINT]]></Declaration>
      <Get Name="Get" Id="{5a1892e8-9d04-4dbd-a8fb-385510d4753c}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Size := SIZEOF(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="TryDeserializeFrom" Id="{331ced44-7540-4591-a72e-5e6d03d318cc}">
      <Declaration><![CDATA[METHOD TryDeserializeFrom : BOOL
VAR_INPUT
	Deserializer : I_Deserializer;
	Feedback : I_DeserializerFeedback;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryDeserializeFrom := Deserializer.TryGetLreal(activeData, Feedback);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryMakeReferenceTo" Id="{ee5954bf-2a0d-483b-8886-91a0bb74a20d}">
      <Declaration><![CDATA[METHOD TryMakeReferenceTo : BOOL
VAR_INPUT
	Target : I_Datatype;
END_VAR
VAR
	pTargetData : POINTER TO LREAL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT (Target.TypeName = TypeName) THEN
	RETURN;
END_IF

pTargetData := Target.Address;
activeData REF= pTargetData^;
TryMakeReferenceTo := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Property Name="TypeName" Id="{a432f784-e285-4645-9d2e-b5735c558c9d}">
      <Declaration><![CDATA[PROPERTY PUBLIC TypeName : T_MAXSTRING]]></Declaration>
      <Get Name="Get" Id="{fa4e0604-e362-454f-bf9c-31636f2adae8}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[TypeName := 'LREAL';]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="Value" Id="{27002f84-6748-4a80-8b6e-791fe85a74b0}">
      <Declaration><![CDATA[PROPERTY PUBLIC Value : REFERENCE TO LREAL]]></Declaration>
      <Get Name="Get" Id="{d571196e-195c-458a-90d9-7091d9058e54}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Value REF= activeData;]]></ST>
        </Implementation>
      </Get>
    </Property>
  </POU>
</TcPlcObject>