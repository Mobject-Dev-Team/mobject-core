<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.13">
  <POU Name="_ULINT" Id="{bde6120f-6364-4026-b44b-2fc58e406905}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK _ULINT EXTENDS NumericDatatypeBase
VAR
	localData : ULINT;
	activeData : REFERENCE TO ULINT REF= localData;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{a72f9151-4509-46ce-a014-414877d198d4}" />
    <Folder Name="Protected" Id="{435cb737-a039-4cff-8147-96d1f7bfc00f}" />
    <Property Name="Address" Id="{82e246ac-c454-4c0d-803c-bc5bd0fbfb37}">
      <Declaration><![CDATA[PROPERTY PUBLIC Address : PVOID]]></Declaration>
      <Get Name="Get" Id="{b048b36e-0738-4600-a8e4-722ca72aeb26}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Address := ADR(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="ClearReference" Id="{41be9bb3-762e-4b07-a00c-1b91d469d5ec}">
      <Declaration><![CDATA[METHOD PUBLIC ClearReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= localData;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Clone" Id="{c51cdf13-1b01-4ad7-854d-70940ac8281d}">
      <Declaration><![CDATA[METHOD PUBLIC Clone : I_Datatype
VAR
    pClone : POINTER TO _ULINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[pClone := __NEW(_ULINT(InitialValue := Value));
Clone := pClone^;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{513f7a59-3db1-4ce9-a741-3aea675fd306}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	InitialValue : ULINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[localData := InitialValue;]]></ST>
      </Implementation>
    </Method>
    <Property Name="IsEven" Id="{b8c9b3d0-56a3-0114-0ed6-b2948bc39887}">
      <Declaration><![CDATA[PROPERTY PUBLIC IsEven : BOOL]]></Declaration>
      <Get Name="Get" Id="{053892cc-6362-0628-1c02-4079d6b4cc8f}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[IsEven := (Value mod 2) = 0;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="IsFloat" Id="{fa2ffdb8-e5f6-47c5-b226-dce19e204ff6}">
      <Declaration><![CDATA[PROPERTY PUBLIC IsFloat : BOOL]]></Declaration>
      <Get Name="Get" Id="{259f0726-c668-4d66-973f-998347013f10}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[IsFloat := FALSE;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="IsSigned" Id="{36fc749e-eb6a-4c3f-b4a0-46b6cb0e9eef}">
      <Declaration><![CDATA[PROPERTY PUBLIC IsSigned : BOOL]]></Declaration>
      <Get Name="Get" Id="{fdda4534-5126-40e9-b63e-6b1e52e04ce0}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[IsSigned := FALSE;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="MakeReferenceTo" Id="{166cc47d-30de-46fb-9cb4-7e6d50154009}">
      <Declaration><![CDATA[METHOD PUBLIC MakeReferenceTo
VAR_INPUT
	ReferenceTarget : REFERENCE TO ULINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= ReferenceTarget;]]></ST>
      </Implementation>
    </Method>
    <Property Name="MaxValue" Id="{e8951ca6-eb4d-4551-9eab-45fa00e85acc}">
      <Declaration><![CDATA[PROPERTY PUBLIC MaxValue : ULINT]]></Declaration>
      <Get Name="Get" Id="{c63b0f4c-c92b-4f86-a014-c2f166de1a3b}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[MaxValue :=  DatatypeLimits.ULINT_MAX_VALUE;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="MinValue" Id="{0ecb9636-31ec-4de8-8419-dd61e1781db9}">
      <Declaration><![CDATA[PROPERTY PUBLIC MinValue : ULINT]]></Declaration>
      <Get Name="Get" Id="{ec8b3d9a-8ccd-4247-afb5-7ff5b16b7c8a}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[MinValue := DatatypeLimits.ULINT_MIN_VALUE;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="SerializeMaxValue" Id="{95e46651-ff87-4a8c-8d42-2b7eeb850a42}" FolderPath="Protected\">
      <Declaration><![CDATA[METHOD PROTECTED SerializeMaxValue
VAR_INPUT
	Serializer : I_Serializer;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Serializer.AddUlint(MaxValue);]]></ST>
      </Implementation>
    </Method>
    <Method Name="SerializeMinValue" Id="{3bbf25ba-79ad-45a3-a4fe-024e5a3f818d}" FolderPath="Protected\">
      <Declaration><![CDATA[METHOD PROTECTED SerializeMinValue
VAR_INPUT
	Serializer : I_Serializer;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Serializer.AddUlint(MinValue);]]></ST>
      </Implementation>
    </Method>
    <Method Name="SerializeWith" Id="{af52ddc8-39c0-4982-a867-7d2707e5c981}">
      <Declaration><![CDATA[METHOD PUBLIC SerializeWith
VAR_INPUT
	Serializer : I_Serializer;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Serializer.AddUlint(activeData);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Size" Id="{c8005a4d-c7ea-458b-80de-07da5a24f0d6}">
      <Declaration><![CDATA[PROPERTY PUBLIC Size : UDINT]]></Declaration>
      <Get Name="Get" Id="{861ccdff-d8ad-4f6a-9bfc-8f22117bf83e}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Size := SIZEOF(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="TryDeserializeFrom" Id="{c16a4453-72b9-4acf-a58a-b1d5b7e37d83}">
      <Declaration><![CDATA[METHOD TryDeserializeFrom : BOOL
VAR_INPUT
	Deserializer : I_Deserializer;
	Feedback : I_DeserializerFeedback;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryDeserializeFrom := Deserializer.TryGetUlint(activeData, Feedback);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryMakeReferenceTo" Id="{fef61275-13e2-4cbb-b370-403774d8bbca}">
      <Declaration><![CDATA[METHOD TryMakeReferenceTo : BOOL
VAR_INPUT
	Target : I_Datatype;
END_VAR
VAR
	pTargetData : POINTER TO ULINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT (Target.TypeName = TypeName) THEN
	RETURN;
END_IF

pTargetData := Target.Address;
activeData REF= pTargetData^;
TryMakeReferenceTo := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Property Name="TypeName" Id="{fdc4282b-f205-42f3-8e27-650dc9a0c240}">
      <Declaration><![CDATA[PROPERTY PUBLIC TypeName : T_MAXSTRING]]></Declaration>
      <Get Name="Get" Id="{e5ac2442-aefc-4db6-87ce-fdc6b59e7d21}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[TypeName := 'ULINT';]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="Value" Id="{d8357b2b-85f4-473a-935d-9f2911300336}">
      <Declaration><![CDATA[PROPERTY PUBLIC Value : REFERENCE TO ULINT]]></Declaration>
      <Get Name="Get" Id="{c3875205-357f-4f79-aa96-fa4036973510}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Value REF= activeData;]]></ST>
        </Implementation>
      </Get>
    </Property>
  </POU>
</TcPlcObject>