<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.13">
  <POU Name="JsonDeserializer" Id="{33607e16-d857-42ff-a777-ee399a72a022}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK JsonDeserializer EXTENDS Disposable IMPLEMENTS I_JsonDeserializer
VAR
	jsonParser : JsonDomParser;
	root : SJsonValue;
	garbageCollector : DeserializerGarbageCollector;
	nullNode : JsonDeserializerNullNode(THIS^);
	rootNode : I_Deserializer := nullNode;
	eventEmitter : EventEmitter;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Destructor" Id="{25e81e5b-1097-4887-b433-bd17750805b6}" />
    <Folder Name="Protected" Id="{9baf6261-9616-4d4e-919a-e38cd3fecd6b}" />
    <Method Name="Clone" Id="{6af19bf6-271b-48fa-bfd5-c84e2e38f2ff}">
      <Declaration><![CDATA[METHOD PUBLIC Clone : I_Deserializer
VAR
	pClone : POINTER TO JsonDeserializer;
	jsonSize : UDINT;
	pJsonString : POINTER TO STRING;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[pClone := __NEW(JsonDeserializer);
Clone := pClone^;

jsonSize := jsonParser.GetDocumentLength();

IF jsonSize = 0 THEN
	// no further cloning to do. 
	RETURN;
END_IF

pJsonString := __NEW(BYTE, jsonSize);

IF jsonParser.CopyDocument(pJsonString^, jsonSize) = 0 THEN
	__DELETE(pJsonString);
	RETURN;
END_IF

pClone^.TryLoad(pJsonString^);
__DELETE(pJsonString);]]></ST>
      </Implementation>
    </Method>
    <Method Name="CreateDeserializer" Id="{f47db19e-f95c-4af5-aa9e-767fe9d54a57}" FolderPath="Protected\">
      <Declaration><![CDATA[METHOD PROTECTED CreateDeserializer : I_Deserializer
VAR_INPUT
	DeserializerRoot : SJsonValue;
END_VAR
VAR 
	pNode : POINTER TO JsonDeserializerNode;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[pNode := __NEW(JsonDeserializerNode(
	ParentJsonDeserializer := THIS^,
	ParentJsonDomParser := jsonParser, 
	NodeRoot := DeserializerRoot, 
	ParentGarbageCollector := garbageCollector, 
	ParentNullDeserializer := nullNode)
);

CreateDeserializer := pNode^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="EmitChangedEvent" Id="{a8f8ce98-9a65-4156-b899-af3c07a7184f}" FolderPath="Protected\">
      <Declaration><![CDATA[METHOD PRIVATE EmitChangedEvent
VAR
	pJsonDeserializerChangedEvent : POINTER TO JsonDeserializerChangedEvent;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[pJsonDeserializerChangedEvent := __NEW(JsonDeserializerChangedEvent(Target := THIS^));
eventEmitter.Emit('OnChanged', pJsonDeserializerChangedEvent^);
pJsonDeserializerChangedEvent^.Dispose();]]></ST>
      </Implementation>
    </Method>
    <Method Name="EmitDisposedEvent" Id="{4fa93604-636c-45c6-b1ff-952cb2890027}" FolderPath="Protected\">
      <Declaration><![CDATA[METHOD PRIVATE EmitDisposedEvent
VAR
	pJsonDeserializerDisposedEvent : POINTER TO JsonDeserializerDisposedEvent;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[pJsonDeserializerDisposedEvent := __NEW(JsonDeserializerDisposedEvent(Target := THIS^));
eventEmitter.Emit('OnDisposed', pJsonDeserializerDisposedEvent^);
pJsonDeserializerDisposedEvent^.Dispose();]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_exit" Id="{4398bb00-38b7-4fe4-aa40-d948cb60b2a6}" FolderPath="Destructor\">
      <Declaration><![CDATA[METHOD FB_exit : BOOL
VAR_INPUT
	bInCopyCode : BOOL; // if TRUE, the exit method is called for exiting an instance that is copied afterwards (online change).
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF bInCopyCode THEN
	RETURN;
END_IF

Reset();
EmitDisposedEvent();]]></ST>
      </Implementation>
    </Method>
    <Method Name="GetArray" Id="{32df193d-6d43-4275-ab94-3dc2b51c2046}">
      <Declaration><![CDATA[METHOD GetArray : I_Deserializer
VAR_INPUT
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[GetArray := rootNode.GetArray();]]></ST>
      </Implementation>
    </Method>
    <Method Name="GetArrayEnumerator" Id="{b301d3aa-0537-45d8-8a0d-bc196dc5c2e1}">
      <Declaration><![CDATA[METHOD GetArrayEnumerator : I_DeserializerArrayForwardEnumerator
VAR_INPUT
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[GetArrayEnumerator := rootNode.GetArrayEnumerator();]]></ST>
      </Implementation>
    </Method>
    <Method Name="GetElementByIndex" Id="{3791a964-baca-4d3d-9968-3575b0604fce}">
      <Declaration><![CDATA[METHOD GetElementByIndex : I_Deserializer
VAR_INPUT
	Index : UDINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[GetElementByIndex := rootNode.GetElementByIndex(Index);]]></ST>
      </Implementation>
    </Method>
    <Method Name="GetKeyArray" Id="{fe8706d8-759e-4a7f-9edf-ce884f0686b1}">
      <Declaration><![CDATA[METHOD GetKeyArray : I_Deserializer
VAR_INPUT
	Key : T_MAXSTRING;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[GetKeyArray := rootNode.GetKeyArray(Key);]]></ST>
      </Implementation>
    </Method>
    <Method Name="GetKeyObject" Id="{957a487d-4d6e-4520-bf02-4254a13a84e2}">
      <Declaration><![CDATA[METHOD GetKeyObject : I_Deserializer
VAR_INPUT
	Key : T_MAXSTRING;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[GetKeyObject := rootNode.GetKeyObject(Key);]]></ST>
      </Implementation>
    </Method>
    <Method Name="GetObject" Id="{dbad7a18-a1a1-4eb3-a1b7-ca71e2e9833a}">
      <Declaration><![CDATA[METHOD GetObject : I_Deserializer
VAR_INPUT
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[GetObject := rootNode.GetObject();]]></ST>
      </Implementation>
    </Method>
    <Method Name="GetObjectEnumerator" Id="{d4ef2b7e-99de-4b5b-9025-9dc1826653e5}">
      <Declaration><![CDATA[METHOD GetObjectEnumerator : I_DeserializerObjectForwardEnumerator
VAR_INPUT
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[GetObjectEnumerator := rootNode.GetObjectEnumerator();]]></ST>
      </Implementation>
    </Method>
    <Method Name="OffEvent" Id="{0f81a8a8-ffaa-42c0-ad6e-9ad5d9928de4}">
      <Declaration><![CDATA[METHOD PUBLIC OffEvent
VAR_INPUT
	EventName : T_MaxString;
	EventHandler : I_EventHandler;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[eventEmitter.OffEvent(EventName, EventHandler);]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnceEvent" Id="{582317cd-b61d-4471-8f87-6f33eebfd143}">
      <Declaration><![CDATA[METHOD PUBLIC OnceEvent
VAR_INPUT
	EventName : T_MaxString;
	EventHandler : I_EventHandler;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[eventEmitter.OnceEvent(EventName, EventHandler);]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnEvent" Id="{e06b2f22-0254-4153-982f-2ed6270cb287}">
      <Declaration><![CDATA[METHOD PUBLIC OnEvent
VAR_INPUT
	EventName : T_MaxString;
	EventHandler : I_EventHandler;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[eventEmitter.OnEvent(EventName, EventHandler);]]></ST>
      </Implementation>
    </Method>
    <Method Name="Reset" Id="{652b36eb-59e6-415a-8da0-4e52da0b1670}">
      <Declaration><![CDATA[METHOD PUBLIC Reset
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[jsonParser.NewDocument();
garbageCollector.Execute();
root := 0;
rootNode := nullNode;
EmitChangedEvent();]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryDeserializeKeyToObject" Id="{f8874143-c444-4dba-8b46-312d2aacbb62}">
      <Declaration><![CDATA[METHOD TryDeserializeKeyToObject : BOOL
VAR_INPUT
	Key : T_MAXSTRING;
	Object : I_Deserializable;
	Feedback : I_DeserializerFeedback;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryDeserializeKeyToObject := rootNode.TryDeserializeKeyToObject(Key,Object, Feedback);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryDeserializeToObject" Id="{d051848e-a1a9-4787-82f4-96ef3b35c8c9}">
      <Declaration><![CDATA[METHOD TryDeserializeToObject : BOOL
VAR_INPUT
	Object : I_Deserializable;
	Feedback : I_DeserializerFeedback;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryDeserializeToObject := rootNode.TryDeserializeToObject(Object, Feedback);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryGetBase64" Id="{6443636e-51b0-46c1-b03f-c4cd6ba1dbf3}">
      <Declaration><![CDATA[METHOD TryGetBase64 : BOOL
VAR_INPUT
	pBytes : POINTER TO BYTE;
	nBytes : DINT;
	Feedback : I_DeserializerFeedback;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryGetBase64 := rootNode.TryGetBase64(pBytes, nBytes, Feedback);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryGetBool" Id="{f4ac3f58-ce4d-4413-b0ba-726a0a7897b6}">
      <Declaration><![CDATA[METHOD TryGetBool : BOOL
VAR_INPUT
	Destination : REFERENCE TO BOOL;
	Feedback : I_DeserializerFeedback;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryGetBool := rootNode.TryGetBool(Destination, Feedback);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryGetByte" Id="{e53c8f9e-dcd5-444e-a88e-1ab8419aebc3}">
      <Declaration><![CDATA[METHOD TryGetByte : BOOL
VAR_INPUT
	Destination : REFERENCE TO BYTE;
	Feedback : I_DeserializerFeedback;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryGetByte := rootNode.TryGetByte(Destination, Feedback);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryGetDateTime" Id="{9485f7fb-5cb3-425d-81a1-095442dc10f4}">
      <Declaration><![CDATA[METHOD TryGetDateTime : BOOL
VAR_INPUT
	Destination : REFERENCE TO DATE_AND_TIME;
	Feedback : I_DeserializerFeedback;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryGetDateTime := rootNode.TryGetDateTime(Destination, Feedback);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryGetDcTime" Id="{184628de-186e-4167-9b8d-cb860b321fb4}">
      <Declaration><![CDATA[METHOD TryGetDcTime : BOOL
VAR_INPUT
	Destination : REFERENCE TO DCTIME;
	Feedback : I_DeserializerFeedback;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryGetDcTime := rootNode.TryGetDcTime(Destination, Feedback);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryGetDint" Id="{e8bb9f39-5f29-49ed-be41-bf9f49e5300b}">
      <Declaration><![CDATA[METHOD TryGetDint : BOOL
VAR_INPUT
	Destination : REFERENCE TO DINT;
	Feedback : I_DeserializerFeedback;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryGetDint := rootNode.TryGetDint(Destination, Feedback);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryGetDword" Id="{08f30628-1d86-43ea-96ad-5cb92af283b7}">
      <Declaration><![CDATA[METHOD TryGetDword : BOOL
VAR_INPUT
	Destination : REFERENCE TO DWORD;
	Feedback : I_DeserializerFeedback;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryGetDword := rootNode.TryGetDword(Destination, Feedback);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryGetElementByIndex" Id="{474769dc-4905-0ab2-0cc8-226e8072f161}">
      <Declaration><![CDATA[METHOD TryGetElementByIndex : BOOL
VAR_INPUT
	Index : UDINT;
	Destination : REFERENCE TO I_Deserializer;
	Feedback : I_DeserializerFeedback;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryGetElementByIndex := rootNode.TryGetElementByIndex(Index, Destination, Feedback);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryGetFileTime" Id="{f5f266cd-a2bf-44cb-bc66-3de5433dcfa9}">
      <Declaration><![CDATA[METHOD TryGetFileTime : BOOL
VAR_INPUT
	Destination : REFERENCE TO FILETIME;
	Feedback : I_DeserializerFeedback;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryGetFileTime := rootNode.TryGetFileTime(Destination, Feedback);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryGetHexAsBytes" Id="{cd1860a0-455c-4ea0-845b-a011925107f9}">
      <Declaration><![CDATA[METHOD TryGetHexAsBytes : BOOL
VAR_INPUT
	pBytes : POINTER TO BYTE;
	nBytes : DINT;
	Feedback : I_DeserializerFeedback;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryGetHexAsBytes := rootNode.TryGetHexAsBytes(pBytes, nBytes, Feedback);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryGetInt" Id="{b5b52ba4-6535-4abf-8491-6e5079e5f5e7}">
      <Declaration><![CDATA[METHOD TryGetInt : BOOL
VAR_INPUT
	Destination : REFERENCE TO INT;
	Feedback : I_DeserializerFeedback;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryGetInt := rootNode.TryGetInt(Destination, Feedback);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryGetKeyBase64" Id="{78834054-7389-4b1b-a140-72e318e8511c}">
      <Declaration><![CDATA[METHOD TryGetKeyBase64 : BOOL
VAR_INPUT
	Key : T_MAXSTRING;
	pBytes : POINTER TO BYTE;
	nBytes : DINT;
	Feedback : I_DeserializerFeedback;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryGetKeyBase64 := rootNode.TryGetKeyBase64(Key, pBytes, nBytes, Feedback);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryGetKeyBool" Id="{c54c4743-d9f1-4600-8cd1-8f68b966bbb4}">
      <Declaration><![CDATA[METHOD TryGetKeyBool : BOOL
VAR_INPUT
	Key : T_MAXSTRING;
	Destination : REFERENCE TO BOOL;
	Feedback : I_DeserializerFeedback;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryGetKeyBool := rootNode.TryGetKeyBool(Key, Destination, Feedback);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryGetKeyByte" Id="{8629d883-dc72-472a-808f-9a9bb185fb5e}">
      <Declaration><![CDATA[METHOD TryGetKeyByte : BOOL
VAR_INPUT
	Key : T_MAXSTRING;
	Destination : REFERENCE TO BYTE;
	Feedback : I_DeserializerFeedback;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryGetKeyByte := rootNode.TryGetKeyByte(Key, Destination, Feedback);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryGetKeyDateTime" Id="{5841be57-1eb3-4723-ad01-22740f06a693}">
      <Declaration><![CDATA[METHOD TryGetKeyDateTime : BOOL
VAR_INPUT
	Key : T_MAXSTRING;
	Destination : REFERENCE TO DATE_AND_TIME;
	Feedback : I_DeserializerFeedback;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryGetKeyDateTime := rootNode.TryGetKeyDateTime(Key, Destination, Feedback);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryGetKeyDcTime" Id="{a2484634-7ec7-430e-909a-54084f7ac095}">
      <Declaration><![CDATA[METHOD TryGetKeyDcTime : BOOL
VAR_INPUT
	Key : T_MAXSTRING;
	Destination : REFERENCE TO DCTIME;
	Feedback : I_DeserializerFeedback;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryGetKeyDcTime := rootNode.TryGetKeyDcTime(Key, Destination, Feedback);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryGetKeyDint" Id="{1897ce6f-a6f7-40df-ae1c-0ab8575a4cf9}">
      <Declaration><![CDATA[METHOD TryGetKeyDint : BOOL
VAR_INPUT
	Key : T_MAXSTRING;
	Destination : REFERENCE TO DINT;
	Feedback : I_DeserializerFeedback;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryGetKeyDint := rootNode.TryGetKeyDint(Key, Destination, Feedback);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryGetKeyDword" Id="{c02fef7c-d08f-4f2f-9fc5-12612b88cbff}">
      <Declaration><![CDATA[METHOD TryGetKeyDword : BOOL
VAR_INPUT
	Key : T_MAXSTRING;
	Destination : REFERENCE TO DWORD;
	Feedback : I_DeserializerFeedback;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryGetKeyDword := rootNode.TryGetKeyDword(Key, Destination, Feedback);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryGetKeyFileTime" Id="{5470f571-9ab2-419f-aac3-5ec7fa739940}">
      <Declaration><![CDATA[METHOD TryGetKeyFileTime : BOOL
VAR_INPUT
	Key : T_MAXSTRING;
	Destination : REFERENCE TO FILETIME;
	Feedback : I_DeserializerFeedback;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryGetKeyFileTime := rootNode.TryGetKeyFileTime(Key, Destination, Feedback);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryGetKeyHexAsBytes" Id="{f7505922-db31-4e54-abc9-a76cc91bac25}">
      <Declaration><![CDATA[METHOD TryGetKeyHexAsBytes : BOOL
VAR_INPUT
	Key : T_MAXSTRING;
	pBytes : POINTER TO BYTE;
	nBytes : DINT;
	Feedback : I_DeserializerFeedback;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryGetKeyHexAsBytes := rootNode.TryGetKeyHexAsBytes(Key, pBytes, nBytes, Feedback);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryGetKeyInt" Id="{0712ded5-f2f8-4793-9ae8-098609af9f3e}">
      <Declaration><![CDATA[METHOD TryGetKeyInt : BOOL
VAR_INPUT
	Key : T_MAXSTRING;
	Destination : REFERENCE TO INT;
	Feedback : I_DeserializerFeedback;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryGetKeyInt := rootNode.TryGetKeyInt(Key, Destination, Feedback);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryGetKeyLint" Id="{4b43a83a-674c-48c8-a661-dc009a0dde7e}">
      <Declaration><![CDATA[METHOD TryGetKeyLint : BOOL
VAR_INPUT
	Key : T_MAXSTRING;
	Destination : REFERENCE TO LINT;
	Feedback : I_DeserializerFeedback;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryGetKeyLint := rootNode.TryGetKeyLint(Key, Destination, Feedback);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryGetKeyLreal" Id="{08a9d73c-43ea-447e-86b2-f4abcdce24af}">
      <Declaration><![CDATA[METHOD TryGetKeyLreal : BOOL
VAR_INPUT
	Key : T_MAXSTRING;
	Destination : REFERENCE TO LREAL;
	Feedback : I_DeserializerFeedback;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryGetKeyLreal := rootNode.TryGetKeyLreal(Key, Destination, Feedback);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryGetKeyLtime" Id="{6a80c1d1-8d7e-46ba-81ca-af1ea8a9ee02}">
      <Declaration><![CDATA[METHOD TryGetKeyLtime : BOOL
VAR_INPUT
	Key : T_MAXSTRING;
	Destination : REFERENCE TO LTIME;
	Feedback : I_DeserializerFeedback;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryGetKeyLtime := rootNode.TryGetKeyLtime(Key, Destination, Feedback);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryGetKeyLword" Id="{ff81c406-b573-41a1-a4b6-c7153d028ddf}">
      <Declaration><![CDATA[METHOD TryGetKeyLword : BOOL
VAR_INPUT
	Key : T_MAXSTRING;
	Destination : REFERENCE TO LWORD;
	Feedback : I_DeserializerFeedback;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryGetKeyLword := rootNode.TryGetKeyLword(Key, Destination, Feedback);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryGetKeyReal" Id="{20f6bb54-fd66-4d4f-8187-84b31223cd71}">
      <Declaration><![CDATA[METHOD TryGetKeyReal : BOOL
VAR_INPUT
	Key : T_MAXSTRING;
	Destination : REFERENCE TO REAL;
	Feedback : I_DeserializerFeedback;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryGetKeyReal := rootNode.TryGetKeyReal(Key, Destination, Feedback);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryGetKeySint" Id="{064b3089-80fa-44d6-8f6d-59cc727ea997}">
      <Declaration><![CDATA[METHOD TryGetKeySint : BOOL
VAR_INPUT
	Key : T_MAXSTRING;
	Destination : REFERENCE TO SINT;
	Feedback : I_DeserializerFeedback;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryGetKeySint := rootNode.TryGetKeySint(Key, Destination, Feedback);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryGetKeyString" Id="{8e34a995-537d-4c0c-b13f-bd424b3e589a}">
      <Declaration><![CDATA[METHOD TryGetKeyString : BOOL
VAR_INPUT
	Key : T_MAXSTRING;
	Destination : REFERENCE TO T_MAXSTRING;
	Feedback : I_DeserializerFeedback;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryGetKeyString := rootNode.TryGetKeyString(Key, Destination, Feedback);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryGetKeyStringEx" Id="{712bbcec-f31e-05fb-272e-34bed025c54d}">
      <Declaration><![CDATA[METHOD TryGetKeyStringEx : BOOL
VAR_INPUT
	Key : T_MAXSTRING;
	DestinationAddress : POINTER TO STRING;
	DestinationSize : UDINT;
	Feedback : I_DeserializerFeedback;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryGetKeyStringEx := rootNode.TryGetKeyStringEx(Key, DestinationAddress, DestinationSize, Feedback);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryGetKeyTime" Id="{36761ef9-1461-449a-a02c-08088b4b7b03}">
      <Declaration><![CDATA[METHOD TryGetKeyTime : BOOL
VAR_INPUT
	Key : T_MAXSTRING;
	Destination : REFERENCE TO TIME;
	Feedback : I_DeserializerFeedback;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryGetKeyTime := rootNode.TryGetKeyTime(Key, Destination, Feedback);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryGetKeyTod" Id="{278af3a0-ffa2-45b7-a712-3c9febfa2f66}">
      <Declaration><![CDATA[METHOD TryGetKeyTod : BOOL
VAR_INPUT
	Key : T_MAXSTRING;
	Destination : REFERENCE TO TOD;
	Feedback : I_DeserializerFeedback;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryGetKeyTod := rootNode.TryGetKeyTod(Key, Destination, Feedback);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryGetKeyUdint" Id="{a51b96a5-1e14-42eb-8289-6961e8165ba4}">
      <Declaration><![CDATA[METHOD TryGetKeyUdint : BOOL
VAR_INPUT
	Key : T_MAXSTRING;
	Destination : REFERENCE TO UDINT;
	Feedback : I_DeserializerFeedback;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryGetKeyUdint := rootNode.TryGetKeyUdint(Key, Destination, Feedback);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryGetKeyUint" Id="{2af7b8ba-3b38-43b5-9cef-e203cac32bce}">
      <Declaration><![CDATA[METHOD TryGetKeyUint : BOOL
VAR_INPUT
	Key : T_MAXSTRING;
	Destination : REFERENCE TO UINT;
	Feedback : I_DeserializerFeedback;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryGetKeyUint := rootNode.TryGetKeyUint(Key, Destination, Feedback);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryGetKeyUlint" Id="{d3f4de97-f59c-4512-a9a0-6e2999c24f43}">
      <Declaration><![CDATA[METHOD TryGetKeyUlint : BOOL
VAR_INPUT
	Key : T_MAXSTRING;
	Destination : REFERENCE TO ULINT;
	Feedback : I_DeserializerFeedback;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryGetKeyUlint := rootNode.TryGetKeyUlint(Key, Destination, Feedback);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryGetKeyUsint" Id="{af9c46be-c08d-47d7-a792-5013a98e8bbb}">
      <Declaration><![CDATA[METHOD TryGetKeyUsint : BOOL
VAR_INPUT
	Key : T_MAXSTRING;
	Destination : REFERENCE TO USINT;
	Feedback : I_DeserializerFeedback;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryGetKeyUsint := rootNode.TryGetKeyUsint(Key, Destination, Feedback);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryGetKeyWord" Id="{e4908f50-c709-4d4b-a9e4-b014057d9704}">
      <Declaration><![CDATA[METHOD TryGetKeyWord : BOOL
VAR_INPUT
	Key : T_MAXSTRING;
	Destination : REFERENCE TO WORD;
	Feedback : I_DeserializerFeedback;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryGetKeyWord := rootNode.TryGetKeyWord(Key, Destination, Feedback);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryGetLint" Id="{ef192691-d277-4a5a-9ff0-5e661d0f3753}">
      <Declaration><![CDATA[METHOD TryGetLint : BOOL
VAR_INPUT
	Destination : REFERENCE TO LINT;
	Feedback : I_DeserializerFeedback;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryGetLint := rootNode.TryGetLint(Destination, Feedback);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryGetLreal" Id="{e15238c8-65c7-40c2-a47a-4343df0dbfba}">
      <Declaration><![CDATA[METHOD TryGetLreal : BOOL
VAR_INPUT
	Destination : REFERENCE TO LREAL;
	Feedback : I_DeserializerFeedback;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryGetLreal := rootNode.TryGetLreal(Destination, Feedback);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryGetLtime" Id="{75bdc86c-ba76-4c13-80a7-7c69b1f5fd2f}">
      <Declaration><![CDATA[METHOD TryGetLtime : BOOL
VAR_INPUT
	Destination : REFERENCE TO LTIME;
	Feedback : I_DeserializerFeedback;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryGetLtime := rootNode.TryGetLtime(Destination, Feedback);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryGetLword" Id="{98ff927b-c265-42c4-a02a-ae6164a28065}">
      <Declaration><![CDATA[METHOD TryGetLword : BOOL
VAR_INPUT
	Destination : REFERENCE TO LWORD;
	Feedback : I_DeserializerFeedback;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryGetLword := rootNode.TryGetLword(Destination, Feedback);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryGetReal" Id="{f658ad1c-ccf1-4da6-99f1-dd9c659afd24}">
      <Declaration><![CDATA[METHOD TryGetReal : BOOL
VAR_INPUT
	Destination : REFERENCE TO REAL;
	Feedback : I_DeserializerFeedback;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryGetReal := rootNode.TryGetReal(Destination, Feedback);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryGetSint" Id="{722f5830-4351-4acd-a3b4-024f05358d74}">
      <Declaration><![CDATA[METHOD TryGetSint : BOOL
VAR_INPUT
	Destination : REFERENCE TO SINT;
	Feedback : I_DeserializerFeedback;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryGetSint := rootNode.TryGetSint(Destination, Feedback);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryGetString" Id="{de4e33a0-ab56-4d57-ad2a-2035c735b78c}">
      <Declaration><![CDATA[METHOD TryGetString : BOOL
VAR_INPUT
	Destination : REFERENCE TO T_MAXSTRING;
	Feedback : I_DeserializerFeedback;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryGetString := rootNode.TryGetString(Destination, Feedback);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryGetStringEx" Id="{2c468514-d88e-0fab-0c0a-e26aef09f5b4}">
      <Declaration><![CDATA[METHOD TryGetStringEx : BOOL
VAR_INPUT
	DestinationAddress : POINTER TO STRING;
	DestinationSize : UDINT;
	Feedback : I_DeserializerFeedback;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryGetStringEx := rootNode.TryGetStringEx(DestinationAddress, DestinationSize, Feedback);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryGetTime" Id="{1ab23048-c202-493d-b3ae-ba72573f1eb2}">
      <Declaration><![CDATA[METHOD TryGetTime : BOOL
VAR_INPUT
	Destination : REFERENCE TO TIME;
	Feedback : I_DeserializerFeedback;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryGetTime := rootNode.TryGetTime(Destination, Feedback);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryGetTod" Id="{046e14a6-cd7f-4165-b5cb-7de9f6dae441}">
      <Declaration><![CDATA[METHOD TryGetTod : BOOL
VAR_INPUT
	Destination : REFERENCE TO TOD;
	Feedback : I_DeserializerFeedback;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryGetTod := rootNode.TryGetTod(Destination, Feedback);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryGetUdint" Id="{ef71d1b1-0835-497d-8e60-af9216234170}">
      <Declaration><![CDATA[METHOD TryGetUdint : BOOL
VAR_INPUT
	Destination : REFERENCE TO UDINT;
	Feedback : I_DeserializerFeedback;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryGetUdint := rootNode.TryGetUdint(Destination, Feedback);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryGetUint" Id="{0d4f5b05-60af-45e2-8771-535598c24115}">
      <Declaration><![CDATA[METHOD TryGetUint : BOOL
VAR_INPUT
	Destination : REFERENCE TO UINT;
	Feedback : I_DeserializerFeedback;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryGetUint := rootNode.TryGetUint(Destination, Feedback);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryGetUlint" Id="{a52011fc-a47c-4f90-bb7d-f7807961f22e}">
      <Declaration><![CDATA[METHOD TryGetUlint : BOOL
VAR_INPUT
	Destination : REFERENCE TO ULINT;
	Feedback : I_DeserializerFeedback;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryGetUlint := rootNode.TryGetUlint(Destination, Feedback);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryGetUsint" Id="{8d7ab32d-181a-425c-9e2b-9fc4f8e29626}">
      <Declaration><![CDATA[METHOD TryGetUsint : BOOL
VAR_INPUT
	Destination : REFERENCE TO USINT;
	Feedback : I_DeserializerFeedback;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryGetUsint := rootNode.TryGetUsint(Destination, Feedback);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryGetWord" Id="{a3892e80-ad23-4c26-b8d0-b4d8f71a2c85}">
      <Declaration><![CDATA[METHOD TryGetWord : BOOL
VAR_INPUT
	Destination : REFERENCE TO WORD;
	Feedback : I_DeserializerFeedback;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryGetWord := rootNode.TryGetWord(Destination, Feedback);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryLoad" Id="{6a1f9be2-30a8-476b-9f1e-f75bb911b849}">
      <Declaration><![CDATA[METHOD PUBLIC TryLoad : BOOL
VAR_INPUT
	SerializedData : REFERENCE TO STRING;;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Reset();
EmitChangedEvent();

root := jsonParser.ParseDocument(SerializedData);
IF root = 0 THEN
	RETURN;
END_IF

rootNode := CreateDeserializer(root);
TryLoad := TRUE;]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>